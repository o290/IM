// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type ChatDeleteRequest struct {
	UserID uint   `header:"User-ID"` //与网关传来的保持一致
	IDList []uint `json:"idList"`
}

type ChatDeleteResponse struct {
}

type ChatHistoryRequest struct {
	UserID   uint `header:"User-ID"` //与网关传来的保持一致
	Page     int  `form:"page,optional"`
	Limit    int  `form:"limit,optional"`
	FriendID uint `form:"friendID"`
}

type ChatHistoryResponse struct {
	ID        uint   `json:"id"`
	UserID    uint   `json:"userID"`
	NickName  string `json:"nickName"`
	Avatar    string `json:"avatar"`
	CreatedAt string `json:"created_at"`
}

type ChatRequest struct {
	UserID uint `header:"User-ID"`
}

type ChatResponse struct {
}

type ChatSession struct {
	UserID     uint   `json:"userID"`
	NickName   string `json:"nickName"`
	Avatar     string `json:"avatar"`
	CreatedAt  string `json:"created_at"`
	MsgPreview string `json:"msgPreview"` //消息预览
	IsTop      bool   `json:"isTop"`      //是否置顶
}

type ChatSessionRequest struct {
	UserID uint `header:"User-ID"` //与网关传来的保持一致
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
	Key    int  `form:"key,optional"`
}

type ChatSessionResponse struct {
	List  []ChatSession `json:"list"`
	Count int64         `json:"count"`
}

type UserTopRequest struct {
	UserID   uint `header:"User-ID"` //与网关传来的保持一致
	FriendID uint `json:"friendID"`
}

type UserTopResponse struct {
}
